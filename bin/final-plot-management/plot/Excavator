#!/usr/bin/env bash

## Description: Excavator - This script is not to be ran directly, and is called by 'Foreman'. This script analyzes the chia plot directories, and determines the best drive to move the plot to from the -d buffer drive.

# DEPENDS
if ! command -v ProofOfSpace &> /dev/null; then
	echo "ERROR: Missing ProofOfSpace"
	echo "Get it - https://github.com/Chia-Network/chiapos"
	exit 1
fi

CHIA_PATH=$HOME/chia-blockchain
# Example: CHIA_PATH=$HOME/chia-blockchain
if [[ -z $CHIA_PATH ]]; then
    echo "ERROR: CHIA_PATH is unset."
    echo "Edit $0, and set the value of line #4 to the path of your chia-blockchain repo."
    exit 1
fi

# This is configured to work with the particular setup of my system.
# For this to work for you, please read through this and make adjustments as needed.
# For my system, this works assuming the mountpoint for your drives are structred as:
#
#   mnt
#   ├── plots
#   │   ├── pool
#   │   │   └── plot-<NFT_PLOT>.plot
#   │   └── solo
#   │       └── plot-<OG_PLOT>.plot
#   └── plots2
#       ├── pool
#       │   └── plot-<NFT_PLOT>.plot
#       └── solo
#           └── plot-<OG_PLOT>.plot
#

# Check for interactive execution
if [[ -z $WENDY_INODE ]]; then
    if [[ -z $1 ]]; then
        echo "To run this manually, execute as:"
        echo "replot <NFT_PLOT>"
        exit 1
    else
        WENDY_INODE=$(realpath "$1")
    fi
fi

# FindMounts
echo "Finding plot locations..."
MOUNT_LIST="/tmp/$(basename "$0")-mounts.$$.list"
"$CHIA_PATH"/venv/bin/chia plots show | grep 'solo\|pool' | sed 's,/*[^/]\+/*$,,' | sort -R >"$MOUNT_LIST"

# FindDupes
echo "Finding presence of existing plots..."
PLOTNAME=$(basename $WENDY_INODE)
PLOTDUPE=$(find /mnt/plots*/ -type f -name $PLOTNAME)
DUPEPATH=$(dirname "$PLOTDUPE")
if $(find /mnt/plots*/pool/ -type f -name $PLOTNAME | grep -q .); then
	if $(ProofOfSpace check -f $PLOTDUPE 1 &>/dev/null); then
		echo "Plot $PLOTNAME already exists at $DUPEPATH, and is valid"
		echo "Consider deleting $WENDY_INODE"
		exit 1
	else
		echo "Plot $PLOTNAME already exists at $DUPEPATH, but does not appear to be valid"
		echo "Plot transfer may already be in progress, or incomplete plot may need to be removed"
		exit 1
	fi
fi

# FindBusy
WATCH_TARGET=$(dirname "$WENDY_INODE")
BUSY_LIST="/tmp/$(basename "$0")-busy.$$.list"
pgrep -fa "^rsync -a --progress --remove-source-files $WATCH_TARGET/plot-*" | sed -e 's/^.* //;s/.$//' | uniq > "$BUSY_LIST"

# RemoveBusy
if [[ -s "$BUSY_LIST" ]]; then
	while read -r BUSY; do
    ESC_BUSY="$(printf '%s\n' "$BUSY" | sed -e 's/[\/&]/\\&/g')"
    sed -i "/^$ESC_BUSY\b/Id" "$MOUNT_LIST"
	done <"$BUSY_LIST"
fi

# CheckMounts
n=0
until [ "$n" -ge 3 ]; do
	[ -s "$MOUNT_LIST" ] && break
	n=$((n+1))
	echo "No available mounts. Checking again in 5 minutes..."
	sleep 5m
done
if [[ $n -eq 6 ]]; then
	echo "Could not find an available mount. Giving up"
	exit 1
fi

# IterateMounts
while read -r TARGET; do
	PLOTNAME="$(basename "$WENDY_INODE")"
	PLOTSIZE="$(stat --printf='%s' "$WENDY_INODE")"
	AVAIL="$(df --output=avail --block-size=1 "$TARGET" | tail -n 1 | xargs)"
	PLOTCOUNT="$(("$AVAIL" / "$PLOTSIZE"))"
	echo "Evaluating mount..."
	if [[ $PLOTCOUNT -gt 0 ]]; then
		echo "Moving $WENDY_INODE to $TARGET/pool/..."
		rsync -a --progress --remove-source-files "$WENDY_INODE" "$TARGET"/pool/
			if [[ -f "$TARGET"/pool/"$PLOTNAME" ]]; then
				echo "$PLOTNAME has been moved to $TARGET/pool/, and is ready for farming!"
			fi
		break
	fi
done < "$MOUNT_LIST"

rm "$MOUNT_LIST"
rm "$BUSY_LIST"
